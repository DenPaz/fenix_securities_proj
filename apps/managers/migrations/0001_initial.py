# Generated by Django 4.1.9 on 2023-06-03 23:49

import apps.managers.models
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django_countries.fields
import django_extensions.db.fields
import uuid


class Migration(migrations.Migration):
    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name="RepCode",
            fields=[
                (
                    "created",
                    django_extensions.db.fields.CreationDateTimeField(auto_now_add=True, verbose_name="created"),
                ),
                (
                    "modified",
                    django_extensions.db.fields.ModificationDateTimeField(auto_now=True, verbose_name="modified"),
                ),
                ("id", models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                (
                    "rep_number",
                    models.CharField(max_length=3, unique=True, validators=[apps.managers.models.ValidateDigits(3)]),
                ),
                (
                    "rep_category",
                    models.CharField(
                        choices=[
                            ("FS", "Fenix Securities"),
                            ("FF", "Foreign Finder"),
                            ("FIADV", "Foreign Investment Adviser"),
                            ("FA", "Foreign Associate"),
                        ],
                        max_length=100,
                    ),
                ),
                ("name", models.CharField(max_length=100)),
                ("email_1", models.EmailField(max_length=100)),
                ("email_2", models.EmailField(blank=True, max_length=100)),
                ("status", models.CharField(choices=[("OPEN", "Open"), ("CLOSED", "Closed")], max_length=8)),
                ("country", django_countries.fields.CountryField(max_length=2)),
                ("state", models.CharField(blank=True, max_length=100)),
                ("city", models.CharField(blank=True, max_length=100)),
                ("zip_code", models.CharField(blank=True, max_length=100)),
                ("address", models.CharField(blank=True, max_length=100)),
                (
                    "phone_number",
                    models.CharField(blank=True, max_length=15, validators=[apps.managers.models.ValidateDigits(8)]),
                ),
                (
                    "sharing_agreement",
                    models.FloatField(default=100, validators=[apps.managers.models.ValidateSharingAgreement()]),
                ),
            ],
            options={
                "get_latest_by": "modified",
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="GeneralAccount",
            fields=[
                (
                    "created",
                    django_extensions.db.fields.CreationDateTimeField(auto_now_add=True, verbose_name="created"),
                ),
                (
                    "modified",
                    django_extensions.db.fields.ModificationDateTimeField(auto_now=True, verbose_name="modified"),
                ),
                ("id", models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                (
                    "account_number",
                    models.CharField(max_length=8, unique=True, validators=[apps.managers.models.ValidateDigits(8)]),
                ),
                ("account_name", models.CharField(max_length=100)),
                ("status", models.CharField(choices=[("OPEN", "Open"), ("CLOSED", "Closed")], max_length=8)),
                ("open_date", models.DateField(blank=True, null=True)),
                ("close_date", models.DateField(blank=True, null=True)),
                (
                    "account_holders",
                    models.PositiveSmallIntegerField(
                        default=1,
                        validators=[
                            django.core.validators.MinValueValidator(1),
                            django.core.validators.MaxValueValidator(5),
                        ],
                    ),
                ),
                ("is_cash", models.BooleanField(default=False)),
                ("is_margin", models.BooleanField(default=False)),
                (
                    "option_level",
                    models.PositiveSmallIntegerField(
                        default=0, validators=[django.core.validators.MaxValueValidator(5)]
                    ),
                ),
                ("country", django_countries.fields.CountryField(max_length=2)),
                ("state", models.CharField(blank=True, max_length=100)),
                ("city", models.CharField(blank=True, max_length=100)),
                ("zip_code", models.CharField(blank=True, max_length=100)),
                ("address", models.CharField(blank=True, max_length=100)),
                (
                    "phone_number",
                    models.CharField(blank=True, max_length=15, validators=[apps.managers.models.ValidateDigits(8)]),
                ),
                (
                    "rep_number",
                    models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to="managers.repcode"),
                ),
            ],
            options={
                "get_latest_by": "modified",
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="AccountHolder",
            fields=[
                (
                    "created",
                    django_extensions.db.fields.CreationDateTimeField(auto_now_add=True, verbose_name="created"),
                ),
                (
                    "modified",
                    django_extensions.db.fields.ModificationDateTimeField(auto_now=True, verbose_name="modified"),
                ),
                ("id", models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ("name", models.CharField(max_length=100)),
                (
                    "account_number",
                    models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to="managers.generalaccount"),
                ),
            ],
            options={
                "get_latest_by": "modified",
                "abstract": False,
            },
        ),
    ]
